{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/heweicheng/Desktop/study/web3/05-redpocket/hooks/useWallet.ts"],"sourcesContent":["'use client'\nimport { toast } from 'sonner'\nimport { useEffect, useState } from 'react'\nimport { ethers, type JsonRpcSigner, type BrowserProvider } from 'ethers'\n\ninterface WalletState {\n  account: string\n  isConnected: boolean\n  chainId: number | null\n  signer: JsonRpcSigner | null\n  provider: BrowserProvider | null\n}\n\ninterface UseWalletReturn extends WalletState {\n  disconnectWallet(): void\n  connectWallet(): Promise<boolean>\n}\n\nexport default function useWallet(): UseWalletReturn {\n  const [account, setAccount] = useState('')\n  const [isConnected, setIsConnected] = useState(false)\n  const [chainId, setChainId] = useState<number | null>(null)\n  const [signer, setSigner] = useState<JsonRpcSigner | null>(null)\n  const [provider, setProvider] = useState<BrowserProvider | null>(null)\n\n  //* --- 连接钱包和初始化 provider 和 signer ---\n  const connectWallet = async () => {\n    if (typeof window.ethereum === 'undefined') {\n      toast.error('请先安装 MetaMask 钱包或其他以太坊钱包扩展，后再刷新页面')\n      return false\n    }\n\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      })\n\n      if (!accounts.length) {\n        throw new Error('用户拒绝了连接请求')\n      }\n\n      await initializeProviderAndSigner(accounts[0])\n      setupEventListeners()\n      return true\n    } catch (err: any) {\n      console.error('连接钱包失败', err)\n      toast.error(err.message)\n      return false\n    }\n  }\n\n  const disconnectWallet = () => {\n    setAccount('')\n    setChainId(null)\n    setSigner(null)\n    setProvider(null)\n    setIsConnected(false)\n    window.ethereum?.removeListener('accountsChanged', handleAccountsChanged)\n    window.ethereum?.removeListener('chainChanged', handleChainChanged)\n  }\n\n  const initializeProviderAndSigner = async (accountAddress: string) => {\n    if (!window.ethereum) return\n\n    const web3Provider = new ethers.BrowserProvider(window.ethereum)\n    const network = await web3Provider.getNetwork()\n    const web3Signer = await web3Provider.getSigner()\n\n    setIsConnected(true)\n    setSigner(web3Signer)\n    setProvider(web3Provider)\n    setAccount(accountAddress)\n    setChainId(Number(network.chainId))\n  }\n\n  //* --- 处理账户变更 ---\n  //* 连接账户变更\n  const handleAccountsChanged = (accounts: string[]) => {\n    if (!handleAccountsChanged.length) disconnectWallet()\n    else {\n      setAccount(accounts[0])\n      initializeProviderAndSigner(accounts[0])\n    }\n  }\n\n  //* 连接网络变更\n  const handleChainChanged = (chainIDHex: string) => {\n    const newChanID = parseInt(chainIDHex, 16)\n    setChainId(newChanID)\n    console.log('连接网络变更', newChanID)\n    toast.success(`已连接到网络: ${newChanID}`)\n  }\n\n  const setupEventListeners = () => {\n    if (!window.ethereum) return\n    window.ethereum.on('accountsChanged', handleAccountsChanged)\n    window.ethereum.on('chainChanged', handleChainChanged)\n  }\n\n  //* --- 检查钱包连接状态 ---\n  const checkIsWalletConnected = async () => {\n    if (typeof window.ethereum === 'undefined') {\n      toast.error('请先安装 MetaMask 钱包，后再刷新页面')\n      return\n    }\n\n    try {\n      const accounts: string[] = await window.ethereum.request({\n        method: 'eth_accounts',\n      })\n\n      if (accounts.length > 0) {\n        await initializeProviderAndSigner(accounts[0])\n      }\n    } catch (err) {\n      console.error('检查钱包连接状态失败', err)\n      toast.error('检查钱包连接状态失败')\n    }\n  }\n\n  useEffect(() => {\n    checkIsWalletConnected()\n  }, [])\n\n  return {\n    signer,\n    account,\n    chainId,\n    provider,\n    isConnected,\n    connectWallet,\n    disconnectWallet,\n  }\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;AAkBe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kXAAQ,EAAC;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,kXAAQ,EAAC;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,kXAAQ,EAAgB;IACtD,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,kXAAQ,EAAuB;IAC3D,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,kXAAQ,EAAyB;IAEjE,sCAAsC;IACtC,MAAM,gBAAgB;QACpB,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,iRAAK,CAAC,KAAK,CAAC;YACZ,OAAO;QACT;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;gBAC7C,QAAQ;YACV;YAEA,IAAI,CAAC,SAAS,MAAM,EAAE;gBACpB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,4BAA4B,QAAQ,CAAC,EAAE;YAC7C;YACA,OAAO;QACT,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC,UAAU;YACxB,iRAAK,CAAC,KAAK,CAAC,IAAI,OAAO;YACvB,OAAO;QACT;IACF;IAEA,MAAM,mBAAmB;QACvB,WAAW;QACX,WAAW;QACX,UAAU;QACV,YAAY;QACZ,eAAe;QACf,OAAO,QAAQ,EAAE,eAAe,mBAAmB;QACnD,OAAO,QAAQ,EAAE,eAAe,gBAAgB;IAClD;IAEA,MAAM,8BAA8B,OAAO;QACzC,IAAI,CAAC,OAAO,QAAQ,EAAE;QAEtB,MAAM,eAAe,IAAI,4SAAM,CAAC,eAAe,CAAC,OAAO,QAAQ;QAC/D,MAAM,UAAU,MAAM,aAAa,UAAU;QAC7C,MAAM,aAAa,MAAM,aAAa,SAAS;QAE/C,eAAe;QACf,UAAU;QACV,YAAY;QACZ,WAAW;QACX,WAAW,OAAO,QAAQ,OAAO;IACnC;IAEA,kBAAkB;IAClB,UAAU;IACV,MAAM,wBAAwB,CAAC;QAC7B,IAAI,CAAC,sBAAsB,MAAM,EAAE;aAC9B;YACH,WAAW,QAAQ,CAAC,EAAE;YACtB,4BAA4B,QAAQ,CAAC,EAAE;QACzC;IACF;IAEA,UAAU;IACV,MAAM,qBAAqB,CAAC;QAC1B,MAAM,YAAY,SAAS,YAAY;QACvC,WAAW;QACX,QAAQ,GAAG,CAAC,UAAU;QACtB,iRAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,WAAW;IACtC;IAEA,MAAM,sBAAsB;QAC1B,IAAI,CAAC,OAAO,QAAQ,EAAE;QACtB,OAAO,QAAQ,CAAC,EAAE,CAAC,mBAAmB;QACtC,OAAO,QAAQ,CAAC,EAAE,CAAC,gBAAgB;IACrC;IAEA,oBAAoB;IACpB,MAAM,yBAAyB;QAC7B,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,iRAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,IAAI;YACF,MAAM,WAAqB,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;gBACvD,QAAQ;YACV;YAEA,IAAI,SAAS,MAAM,GAAG,GAAG;gBACvB,MAAM,4BAA4B,QAAQ,CAAC,EAAE;YAC/C;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,cAAc;YAC5B,iRAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,IAAA,mXAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/heweicheng/Desktop/study/web3/05-redpocket/lib/constants.ts"],"sourcesContent":["export const networks = {\n  97: 'BSC测试网',\n  11155111: 'Sepolia测试网',\n} as const\n"],"names":[],"mappings":";;;;AAAO,MAAM,WAAW;IACtB,IAAI;IACJ,UAAU;AACZ","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///Users/heweicheng/Desktop/study/web3/05-redpocket/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatAddress(address: string) {\n  return `${address.slice(0, 6)}...${address.slice(-4)}`\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,oOAAO,EAAC,IAAA,8LAAI,EAAC;AACtB;AAEO,SAAS,cAAc,OAAe;IAC3C,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;AACxD","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/heweicheng/Desktop/study/web3/05-redpocket/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,4SAAI,GAAG;IAE9B,qBACE,+YAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///Users/heweicheng/Desktop/study/web3/05-redpocket/components/business/Wallet.tsx"],"sourcesContent":["'use client'\nimport useWallet from '@hooks/useWallet'\nimport { networks } from '@lib/constants'\nimport { formatAddress } from '@lib/utils'\nimport { Button } from '@/components/ui/button'\n\nexport default function Wallet() {\n  const { account, chainId, isConnected, connectWallet, disconnectWallet } =\n    useWallet()\n\n  const getNetwork = (chainID: number | null) => {\n    if (!chainID) return '未知网络'\n    return networks[chainID as keyof typeof networks] || `未知网络: ${chainID}`\n  }\n\n  return (\n    <section>\n      {!isConnected ? (\n        <Button\n          variant=\"outline\"\n          onClick={connectWallet}\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200\"\n        >\n          🦊 连接钱包\n        </Button>\n      ) : (\n        <div className=\"connected-info bg-gray-100 p-3 rounded-lg\">\n          <div className=\"network text-sm text-gray-600 mb-1\">\n            网络: {getNetwork(chainId)}\n          </div>\n          <div className=\"account flex items-center justify-between\">\n            <span className=\"address font-mono text-gray-800\">\n              {formatAddress(account)}\n            </span>\n            <Button\n              variant=\"outline\"\n              onClick={disconnectWallet}\n              className=\"ml-4 bg-gray-600 text-white py-1 px-3 rounded text-sm transition duration-200 cursor-pointer\"\n            >\n              断开\n            </Button>\n          </div>\n        </div>\n      )}\n    </section>\n  )\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,aAAa,EAAE,gBAAgB,EAAE,GACtE,IAAA,6HAAS;IAEX,MAAM,aAAa,CAAC;QAClB,IAAI,CAAC,SAAS,OAAO;QACrB,OAAO,4HAAQ,CAAC,QAAiC,IAAI,CAAC,MAAM,EAAE,SAAS;IACzE;IAEA,qBACE,+YAAC;kBACE,CAAC,4BACA,+YAAC,qIAAM;YACL,SAAQ;YACR,SAAS;YACT,WAAU;sBACX;;;;;iCAID,+YAAC;YAAI,WAAU;;8BACb,+YAAC;oBAAI,WAAU;;wBAAqC;wBAC7C,WAAW;;;;;;;8BAElB,+YAAC;oBAAI,WAAU;;sCACb,+YAAC;4BAAK,WAAU;sCACb,IAAA,6HAAa,EAAC;;;;;;sCAEjB,+YAAC,qIAAM;4BACL,SAAQ;4BACR,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAQb","debugId":null}}]
}