/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../common";
import type { RedPocket, RedPocketInterface } from "../RedPocket";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isEqual",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RedPocketClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isEqual",
        type: "bool",
      },
    ],
    name: "RedPocketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "RedPocketFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RedPocketRefunded",
    type: "event",
  },
  {
    inputs: [],
    name: "claimedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimedUsers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isEqual",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provider",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "redPocketMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "grabRedPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyStop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405162001945380380620019458339818101604052810190620000299190620001eb565b600034116200006f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000669062000293565b60405180910390fd5b8160028190555080600460006101000a81548160ff021916908315150217905550600060038190555034600181905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fac57ab854d355fbc9d58fd891ecf21eadbac77656bd6801f97089c3dbb97f638600154600254600460009054906101000a900460ff166040516200015e93929190620002d7565b60405180910390a2505062000314565b600080fd5b6000819050919050565b620001888162000173565b81146200019457600080fd5b50565b600081519050620001a8816200017d565b92915050565b60008115159050919050565b620001c581620001ae565b8114620001d157600080fd5b50565b600081519050620001e581620001ba565b92915050565b600080604083850312156200020557620002046200016e565b5b6000620002158582860162000197565b92505060206200022885828601620001d4565b9150509250929050565b600082825260208201905092915050565b7f616d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b60006200027b601d8362000232565b9150620002888262000243565b602082019050919050565b60006020820190508181036000830152620002ae816200026c565b9050919050565b620002c08162000173565b82525050565b620002d181620001ae565b82525050565b6000606082019050620002ee6000830186620002b5565b620002fd6020830185620002b5565b6200030c6040830184620002c6565b949350505050565b61162180620003246000396000f3fe6080604052600436106100df576000357c010000000000000000000000000000000000000000000000000000000090048063590e1ae31161009c578063b478191211610076578063b478191214610251578063c08fa1a41461028e578063d0e30db0146102b9578063d8b965a0146102c3576100df565b8063590e1ae3146101f857806363a599a41461020f578063acbe845214610226576100df565b806306661abd146100e4578063085d48831461010f57806312065fe01461013a5780631a39d8ef14610165578063482a28a3146101905780634fd4e6c7146101bb575b600080fd5b3480156100f057600080fd5b506100f96102da565b6040516101069190610cac565b60405180910390f35b34801561011b57600080fd5b506101246102e0565b6040516101319190610d08565b60405180910390f35b34801561014657600080fd5b5061014f610304565b60405161015c9190610cac565b60405180910390f35b34801561017157600080fd5b5061017a610323565b6040516101879190610cac565b60405180910390f35b34801561019c57600080fd5b506101a5610329565b6040516101b29190610cac565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd9190610d66565b610340565b6040516101ef9190610cac565b60405180910390f35b34801561020457600080fd5b5061020d610358565b005b34801561021b57600080fd5b50610224610572565b005b34801561023257600080fd5b5061023b6106d9565b6040516102489190610dae565b60405180910390f35b34801561025d57600080fd5b5061027860048036038101906102739190610df5565b6106ec565b6040516102859190610e31565b60405180910390f35b34801561029a57600080fd5b506102a361072b565b6040516102b09190610cac565b60405180910390f35b6102c1610731565b005b3480156102cf57600080fd5b506102d8610820565b005b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60015481565b600060035460025461033b9190610e7b565b905090565b60066020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90610f0c565b60405180910390fd5b6003546002540361042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610f78565b60405180910390fd5b60025460035410610472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046990610fe4565b60405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff16319050600081116104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c890611050565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610537573d6000803e3d6000fd5b507f66720190dbf2f312605963e2d3761908fe8a5419cd8144effbaf2044e6b04347816040516105679190610cac565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f7906110bc565b60405180910390fd5b6000600254600354149050806106d65760003073ffffffffffffffffffffffffffffffffffffffff16319050600081111561069d5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561069b573d6000803e3d6000fd5b505b7fb2ee08d9efbed677a93f9925427328ba214e67a92a28ac3f55e7d0094dda772a816040516106cc9190610cac565b60405180910390a1505b50565b600460009054906101000a900460ff1681565b600581815481106106fc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690611128565b60405180910390fd5b60035460025403610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc90611194565b60405180910390fd5b346001600082825461081791906111b4565b92505081905550565b60035460025403610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90611194565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb90611234565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096d906112c6565b60405180910390fd5b6000600460009054906101000a900460ff16156109a45760025460015461099d9190611315565b9050610a5b565b60003073ffffffffffffffffffffffffffffffffffffffff16319050600060026003546002546109d49190610e7b565b836109df9190611315565b6109e99190611346565b905080424433604051602001610a01939291906113fd565b6040516020818303038152906040528051906020012060019004610a25919061143a565b925060008303610a3457600192505b600282610a419190611315565b831115610a5857600282610a559190611315565b92505b50505b60008111610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a95906114b7565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1631811115610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef90611523565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060036000815480929190610bb290611543565b91905055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610bfd573d6000803e3d6000fd5b5060025460035403610c42577fb2ee08d9efbed677a93f9925427328ba214e67a92a28ac3f55e7d0094dda772a6000604051610c3991906115d0565b60405180910390a15b3373ffffffffffffffffffffffffffffffffffffffff167f8eb192eb6a158876434697709d514901693874d17664ea7f00cd6b14495bf52d82604051610c889190610cac565b60405180910390a250565b6000819050919050565b610ca681610c93565b82525050565b6000602082019050610cc16000830184610c9d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf282610cc7565b9050919050565b610d0281610ce7565b82525050565b6000602082019050610d1d6000830184610cf9565b92915050565b600080fd5b6000610d3382610cc7565b9050919050565b610d4381610d28565b8114610d4e57600080fd5b50565b600081359050610d6081610d3a565b92915050565b600060208284031215610d7c57610d7b610d23565b5b6000610d8a84828501610d51565b91505092915050565b60008115159050919050565b610da881610d93565b82525050565b6000602082019050610dc36000830184610d9f565b92915050565b610dd281610c93565b8114610ddd57600080fd5b50565b600081359050610def81610dc9565b92915050565b600060208284031215610e0b57610e0a610d23565b5b6000610e1984828501610de0565b91505092915050565b610e2b81610d28565b82525050565b6000602082019050610e466000830184610e22565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e8682610c93565b9150610e9183610c93565b9250828203905081811115610ea957610ea8610e4c565b5b92915050565b600082825260208201905092915050565b7f4f6e6c792070726f76696465722063616e20726566756e640000000000000000600082015250565b6000610ef6601883610eaf565b9150610f0182610ec0565b602082019050919050565b60006020820190508181036000830152610f2581610ee9565b9050919050565b7f52656420706f636b65742069732066696e697368656400000000000000000000600082015250565b6000610f62601683610eaf565b9150610f6d82610f2c565b602082019050919050565b60006020820190508181036000830152610f9181610f55565b9050919050565b7f416c6c2072656420706f636b6574732061726520636c61696d65640000000000600082015250565b6000610fce601b83610eaf565b9150610fd982610f98565b602082019050919050565b60006020820190508181036000830152610ffd81610fc1565b9050919050565b7f4e6f20616d6f756e7420746f20726566756e6400000000000000000000000000600082015250565b600061103a601383610eaf565b915061104582611004565b602082019050919050565b600060208201905081810360008301526110698161102d565b9050919050565b7f4f6e6c792070726f76696465722063616e20656d657267656e63792073746f70600082015250565b60006110a6602083610eaf565b91506110b182611070565b602082019050919050565b600060208201905081810360008301526110d581611099565b9050919050565b7f6f6e6c792070726f76696465722063616e206465706f73697400000000000000600082015250565b6000611112601983610eaf565b915061111d826110dc565b602082019050919050565b6000602082019050818103600083015261114181611105565b9050919050565b7f72656420706f636b65742069732066696e697368656400000000000000000000600082015250565b600061117e601683610eaf565b915061118982611148565b602082019050919050565b600060208201905081810360008301526111ad81611171565b9050919050565b60006111bf82610c93565b91506111ca83610c93565b92508282019050808211156111e2576111e1610e4c565b5b92915050565b7f70726f76696465722063616e277420677261622072656420706f636b65740000600082015250565b600061121e601e83610eaf565b9150611229826111e8565b602082019050919050565b6000602082019050818103600083015261124d81611211565b9050919050565b7f757365722068617320616c726561647920677261626265642072656420706f6360008201527f6b65740000000000000000000000000000000000000000000000000000000000602082015250565b60006112b0602383610eaf565b91506112bb82611254565b604082019050919050565b600060208201905081810360008301526112df816112a3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061132082610c93565b915061132b83610c93565b92508261133b5761133a6112e6565b5b828204905092915050565b600061135182610c93565b915061135c83610c93565b925082820261136a81610c93565b9150828204841483151761138157611380610e4c565b5b5092915050565b6000819050919050565b6113a361139e82610c93565b611388565b82525050565b60006c0100000000000000000000000082029050919050565b60006113cd826113a9565b9050919050565b60006113df826113c2565b9050919050565b6113f76113f282610d28565b6113d4565b82525050565b60006114098286611392565b6020820191506114198285611392565b60208201915061142982846113e6565b601482019150819050949350505050565b600061144582610c93565b915061145083610c93565b9250826114605761145f6112e6565b5b828206905092915050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b60006114a1600e83610eaf565b91506114ac8261146b565b602082019050919050565b600060208201905081810360008301526114d081611494565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061150d601483610eaf565b9150611518826114d7565b602082019050919050565b6000602082019050818103600083015261153c81611500565b9050919050565b600061154e82610c93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115805761157f610e4c565b5b600182019050919050565b6000819050919050565b6000819050919050565b60006115ba6115b56115b08461158b565b611595565b610c93565b9050919050565b6115ca8161159f565b82525050565b60006020820190506115e560008301846115c1565b9291505056fea2646970667358221220a06d517e49403717e1bf44bbbcec0159628f0d50d03a726029460ed0765b500e64736f6c63430008150033";

type RedPocketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedPocketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RedPocket__factory extends ContractFactory {
  constructor(...args: RedPocketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _count: BigNumberish,
    _isEqual: boolean,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_count, _isEqual, overrides || {});
  }
  override deploy(
    _count: BigNumberish,
    _isEqual: boolean,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_count, _isEqual, overrides || {}) as Promise<
      RedPocket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RedPocket__factory {
    return super.connect(runner) as RedPocket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedPocketInterface {
    return new Interface(_abi) as RedPocketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RedPocket {
    return new Contract(address, _abi, runner) as unknown as RedPocket;
  }
}
